{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactProjects\\\\react001maim\\\\src\\\\components\\\\App.js\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport MenuAdmin from \"./MenuAdmin\";\nimport sampleBurgers from \"../sample-burgers\";\nimport Burger from \"./Burger\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      burgers: {},\n      order: {}\n    };\n\n    this.addBurger = burger => {\n      const burgers = { ...this.state.burgers\n      };\n      burgers[`burger${Date.now()}`] = burger;\n      this.setState({\n        burgers\n      });\n      console.log(this.state);\n    };\n\n    this.addToOrder = key => {\n      const order = { ...this.state.order\n      };\n      order[key] = order[key] + 1 || 1;\n      this.setState({\n        order: order\n      });\n      /*const newOrder = order;\r\n      this.loadSampleOrders(newOrder);*/\n    };\n\n    this.loadSampleBurgers = () => {\n      this.setState({\n        burgers: sampleBurgers\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      params\n    } = this.props.match;\n    const localStorageRef = localStorage.getItem(params.restaurantId);\n\n    if (localStorageRef) {\n      this.setState({\n        order: JSON.parse(localStorageRef)\n      });\n    }\n\n    this.ref = base.syncState(`${params.restaurantId}/burgers`, {\n      context: this,\n      state: 'burgers'\n    });\n  }\n\n  componentDidUpdate() {\n    const {\n      params\n    } = this.props.match;\n    localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"burger-paradise\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: \"Very Hot Burgers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, Object.keys(this.state.burgers).map(key => /*#__PURE__*/React.createElement(Burger, {\n      key: key,\n      index: key,\n      addToOrder: this.addToOrder,\n      details: this.state.burgers[key],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 69\n      }\n    })))), /*#__PURE__*/React.createElement(Order, {\n      burgers: this.state.burgers,\n      order: this.state.order,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(MenuAdmin, {\n      burgers: this.state.burgers,\n      loadSampleBurgers: this.loadSampleBurgers,\n      addBurger: this.addBurger,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/reactProjects/react001maim/src/components/App.js"],"names":["React","Header","Order","MenuAdmin","sampleBurgers","Burger","base","App","Component","state","burgers","order","addBurger","burger","Date","now","setState","console","log","addToOrder","key","loadSampleBurgers","componentDidMount","params","props","match","localStorageRef","localStorage","getItem","restaurantId","JSON","parse","ref","syncState","context","componentDidUpdate","setItem","stringify","componentWillUnmount","removeBinding","render","Object","keys","map"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport MenuAdmin from \"./MenuAdmin\";\r\nimport sampleBurgers from \"../sample-burgers\";\r\nimport Burger from \"./Burger\";\r\nimport base from \"../base\";\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        burgers: {},\r\n        order: {}\r\n    }\r\n\r\n   componentDidMount() {\r\n        const {params} = this.props.match;\r\n\r\n        const localStorageRef = localStorage.getItem(params.restaurantId);\r\n\r\n        if(localStorageRef) {\r\n            this.setState({order: JSON.parse(localStorageRef)});\r\n        }\r\n\r\n        this.ref = base.syncState(`${params.restaurantId}/burgers` , {\r\n            context: this,\r\n            state: 'burgers'\r\n        })\r\n    }\r\n\r\n   componentDidUpdate() {\r\n        const {params} = this.props.match;\r\n        localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order))\r\n   }\r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n   }\r\n\r\n    addBurger = (burger) => {\r\n        const burgers = {...this.state.burgers};\r\n\r\n        burgers[`burger${Date.now()}`] = burger;\r\n\r\n        this.setState({ burgers });\r\n\r\n        console.log(this.state);\r\n    }\r\n\r\n    addToOrder = key => {\r\n        const order = {...this.state.order}\r\n\r\n        order[key] = order[key] + 1 || 1;\r\n\r\n        this.setState({ order : order });\r\n        /*const newOrder = order;\r\n        this.loadSampleOrders(newOrder);*/\r\n    }\r\n\r\n    /*loadSampleOrders = (newOrder) => {\r\n        this.setState({order : newOrder})\r\n    }*/\r\n\r\n    loadSampleBurgers = () => {\r\n        this.setState({burgers: sampleBurgers});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='burger-paradise'>\r\n                <div className='menu'>\r\n                    <Header title='Very Hot Burgers' />\r\n                    <ul>\r\n                        {Object.keys(this.state.burgers).map(key => <Burger\r\n                            key={key}\r\n                            index={key}\r\n                            addToOrder={this.addToOrder}\r\n                            details={this.state.burgers[key]}\r\n                        />)}\r\n                    </ul>\r\n                </div>\r\n                    <Order burgers={this.state.burgers} order={this.state.order}/>\r\n                    <MenuAdmin burgers={this.state.burgers} loadSampleBurgers={this.loadSampleBurgers} addBurger={this.addBurger}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}