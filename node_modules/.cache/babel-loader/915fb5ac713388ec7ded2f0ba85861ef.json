{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactProjects\\\\react001maim\\\\src\\\\components\\\\Order.js\";\nimport React from \"react\";\nimport Shipment from \"./Shipment\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderOrder = key => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      if (!burger) return null;\n      const isAvailable = burger && burger.status === 'available';\n\n      if (!isAvailable) {\n        return /*#__PURE__*/React.createElement(CSSTransition, {\n          classNames: \"order\",\n          timeout: {\n            enter: 5000,\n            exit: 5000\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          className: \"unavailable\",\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }\n        }, \"\\u0412\\u0438\\u0431\\u0430\\u0447\\u0442\\u0435, \", burger ? burger.name : 'бургер', \" \\u0442\\u0438\\u043C\\u0447\\u0430\\u0441\\u043E\\u0432\\u043E \\u043D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u0438\\u0439\"));\n      }\n\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        classNames: \"order\",\n        timeout: {\n          enter: 5000,\n          exit: 2000\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      }, count, \" \\u0448\\u0442. \"), burger.name, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, \" \", count * burger.price, \" \"), \"uah\", /*#__PURE__*/React.createElement(\"button\", {\n        className: \"cancellItem\",\n        onClick: () => this.props.deleteFromOrder(key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, \" \\xD7 \"))));\n    };\n  }\n\n  render() {\n    const OrderIds = Object.keys(this.props.order);\n    const total = OrderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      const isAvailable = burger && burger.status === 'available';\n      if (isAvailable) return prevTotal + burger.price * count;\n      return prevTotal;\n    }, 0);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"\\u0412\\u0430\\u0448\\u0435 \\u0437\\u0430\\u043C\\u043E\\u0432\\u043B\\u0435\\u043D\\u043D\\u044F\"), /*#__PURE__*/React.createElement(TransitionGroup, {\n      component: \"ul\",\n      className: \"order\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, OrderIds.map(this.renderOrder)), total ? /*#__PURE__*/React.createElement(Shipment, {\n      total: total,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nothingSelected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"\\u041E\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C \\u0431\\u0443\\u0440\\u0433\\u0435\\u0440\\u0438\"));\n  }\n\n}\n\nexport default Order;","map":{"version":3,"sources":["C:/reactProjects/react001maim/src/components/Order.js"],"names":["React","Shipment","TransitionGroup","CSSTransition","Order","Component","renderOrder","key","burger","props","burgers","count","order","isAvailable","status","enter","exit","name","price","deleteFromOrder","render","OrderIds","Object","keys","total","reduce","prevTotal","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,eAAR,EAAyBC,aAAzB,QAA6C,wBAA7C;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAEhCC,WAFgC,GAEjBC,GAAD,IAAS;AACnB,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBH,GAAnB,CAAf;AACA,YAAMI,KAAK,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AAEA,UAAG,CAACC,MAAJ,EAAY,OAAO,IAAP;AAEZ,YAAMK,WAAW,GAAGL,MAAM,IAAIA,MAAM,CAACM,MAAP,KAAkB,WAAhD;;AACA,UAAI,CAACD,WAAL,EAAkB;AACd,4BACI,oBAAC,aAAD;AAAe,UAAA,UAAU,EAAC,OAA1B;AAAkC,UAAA,OAAO,EAAE;AAACE,YAAAA,KAAK,EAAE,IAAR;AAAeC,YAAAA,IAAI,EAAG;AAAtB,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAI,UAAA,SAAS,EAAC,aAAd;AAA4B,UAAA,GAAG,EAAET,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DACcC,MAAM,GAAGA,MAAM,CAACS,IAAV,GAAiB,QADrC,+HADJ,CADJ;AAOH;;AAED,0BACI,oBAAC,aAAD;AAAe,QAAA,UAAU,EAAC,OAA1B;AAAkC,QAAA,OAAO,EAAE;AAACF,UAAAA,KAAK,EAAE,IAAR;AAAeC,UAAAA,IAAI,EAAG;AAAtB,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,GAAG,EAAET,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOI,KAAP,oBADJ,EAEKH,MAAM,CAACS,IAFZ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQN,KAAK,GAAGH,MAAM,CAACU,KAAvB,MAHJ,sBAII;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAE,MAAM,KAAKT,KAAL,CAAWU,eAAX,CAA2BZ,GAA3B,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CADA,CADJ,CADJ;AAYH,KA/B+B;AAAA;;AAiChCa,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKd,KAAL,CAAWG,KAAvB,CAAjB;AAEA,UAAMY,KAAK,GAAGH,QAAQ,CAACI,MAAT,CAAgB,CAACC,SAAD,EAAYnB,GAAZ,KAAoB;AAC9C,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBH,GAAnB,CAAf;AACA,YAAMI,KAAK,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd;AAEA,YAAMM,WAAW,GAAGL,MAAM,IAAIA,MAAM,CAACM,MAAP,KAAkB,WAAhD;AAEA,UAAID,WAAJ,EAAiB,OAAOa,SAAS,GAAGlB,MAAM,CAACU,KAAP,GAAeP,KAAlC;AAEjB,aAAOe,SAAP;AACH,KATa,EASX,CATW,CAAd;AAUA,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FADJ,eAEI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,IAA3B;AAAgC,MAAA,SAAS,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,QAAQ,CAACM,GAAT,CAAa,KAAKrB,WAAlB,CADL,CAFJ,EAKKkB,KAAK,gBACF,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,gBAEF;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FAPR,CADJ;AAaH;;AA3D+B;;AA8DpC,eAAepB,KAAf","sourcesContent":["import React from \"react\";\r\nimport Shipment from \"./Shipment\";\r\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n\r\n    renderOrder = (key) => {\r\n        const burger = this.props.burgers[key];\r\n        const count = this.props.order[key];\r\n\r\n        if(!burger) return null;\r\n\r\n        const isAvailable = burger && burger.status === 'available';\r\n        if (!isAvailable) {\r\n            return (\r\n                <CSSTransition classNames='order' timeout={{enter: 5000 , exit : 5000}}>\r\n                    <li className='unavailable' key={key}>\r\n                        Вибачте, {burger ? burger.name : 'бургер'} тимчасово недоступний\r\n                    </li>\r\n                </CSSTransition>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <CSSTransition classNames='order' timeout={{enter: 5000 , exit : 2000}}>\r\n                <li key={key}>\r\n                <span>\r\n                    <span>{count} шт. </span>\r\n                    {burger.name}\r\n                    <span> {count * burger.price} </span>uah\r\n                    <button className='cancellItem' onClick={() => this.props.deleteFromOrder(key)}> &times; </button>\r\n                </span>\r\n                </li>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const OrderIds = Object.keys(this.props.order);\r\n\r\n        const total = OrderIds.reduce((prevTotal, key) => {\r\n            const burger = this.props.burgers[key];\r\n            const count = this.props.order[key];\r\n\r\n            const isAvailable = burger && burger.status === 'available';\r\n\r\n            if (isAvailable) return prevTotal + burger.price * count;\r\n\r\n            return prevTotal;\r\n        }, 0)\r\n        return(\r\n            <div className='order-wrap'>\r\n                <h2>Ваше замовлення</h2>\r\n                <TransitionGroup component='ul' className='order'>\r\n                    {OrderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n                {total ?\r\n                    <Shipment total={total} /> :\r\n                    <div className='nothingSelected'>Оберіть бургери</div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;"]},"metadata":{},"sourceType":"module"}