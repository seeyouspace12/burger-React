{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactProjects\\\\react001maim\\\\src\\\\components\\\\Auth\\\\SignIn.js\";\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport Login from \"./Login\";\nimport firebase from \"firebase/app\";\nimport { firebaseApp } from \"../../base\";\n\nclass SignIn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: ''\n    };\n\n    this.authHandler = async authData => {\n      const {\n        email\n      } = authData.user;\n      this.setState({\n        user: email\n      });\n    };\n\n    this.authenticate = () => {\n      const authProvider = new firebase.auth[\"GithubAuthProvider\"]();\n      firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n    };\n  }\n\n  render(props) {\n    if (!this.state.user) {\n      return /*#__PURE__*/React.createElement(Login, {\n        authenticate: this.authenticate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["C:/reactProjects/react001maim/src/components/Auth/SignIn.js"],"names":["React","propTypes","Login","firebase","firebaseApp","SignIn","Component","state","user","authHandler","authData","email","setState","authenticate","authProvider","auth","signInWithPopup","then","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAAQC,WAAR,QAA0B,YAA1B;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAEzB;AACJC,MAAAA,IAAI,EAAE;AADF,KAFyB;;AAAA,SAMjCC,WANiC,GAMnB,MAAMC,QAAN,IAAkB;AAC5B,YAAM;AAACC,QAAAA;AAAD,UAAUD,QAAQ,CAACF,IAAzB;AACA,WAAKI,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAEG;AAAP,OAAd;AACH,KATgC;;AAAA,SAWjCE,YAXiC,GAWlB,MAAM;AACjB,YAAMC,YAAY,GAAG,IAAIX,QAAQ,CAACY,IAAT,CAAc,oBAAd,CAAJ,EAArB;AACAX,MAAAA,WAAW,CACPW,IADJ,GAEIC,eAFJ,CAEoBF,YAFpB,EAGIG,IAHJ,CAGS,KAAKR,WAHd;AAIH,KAjBgC;AAAA;;AAmBjCS,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACV,QAAG,CAAC,KAAKZ,KAAL,CAAWC,IAAf,EAAqB;AACjB,0BAAO,oBAAC,KAAD;AAAO,QAAA,YAAY,EAAE,KAAKK,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,WAAO,KAAKM,KAAL,CAAWC,QAAlB;AACH;;AAxBgC;;AA2BrC,eAAef,MAAf","sourcesContent":["import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport Login from \"./Login\";\r\nimport firebase from \"firebase/app\";\r\nimport {firebaseApp} from \"../../base\";\r\n\r\nclass SignIn extends React.Component {\r\n\r\n    state = {\r\n        user: ''\r\n    }\r\n\r\n    authHandler = async authData => {\r\n        const {email} = authData.user;\r\n        this.setState({user: email})\r\n    }\r\n\r\n    authenticate = () => {\r\n        const authProvider = new firebase.auth[\"GithubAuthProvider\"]();\r\n        firebaseApp.\r\n            auth().\r\n            signInWithPopup(authProvider).\r\n            then(this.authHandler)\r\n    }\r\n\r\n    render(props) {\r\n        if(!this.state.user) {\r\n            return <Login authenticate={this.authenticate}/>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}